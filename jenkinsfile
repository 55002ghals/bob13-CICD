pipeline {
    agent any

    environment {
        // Harbor 호스트명 또는 IP (HTTP 모드라면 http:// 사용)
        REGISTRY = "http://43.201.158.81"
        // Harbor 프로젝트명 (예: myproject)
        PROJECT = "bob13-project1"
        // 어플리케이션 이름 (이미지 이름)
        APP_NAME = "test1"
        // 이미지 태그 (빌드 번호 사용)
        IMAGE_TAG = "${env.BUILD_ID}"
        // Jenkins에 등록한 Harbor Credentials의 ID
        CREDENTIALS_ID = "admin"
    }

    stages {
        stage('Checkout') {
            steps {
                // 소스코드를 체크아웃
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // 현재 디렉토리에 있는 Dockerfile을 이용하여 이미지를 빌드
                    dockerImage = docker.build("${REGISTRY}/${PROJECT}/${APP_NAME}:${IMAGE_TAG}")
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Harbor에 인증 후, 이미지를 Push
                    docker.withRegistry(REGISTRY, CREDENTIALS_ID) {
                        dockerImage.push()  // 기본 태그 (여기서는 BUILD_ID 태그) Push
                        dockerImage.push("latest")  // 추가로 latest 태그도 Push (선택 사항)
                    }
                }
            }
        }
        stage('Clean Up') {
            steps {
                script {
                    // 빌드 후 로컬 이미지 정리 (선택 사항)
                    sh "docker rmi ${REGISTRY}/${PROJECT}/${APP_NAME}:${IMAGE_TAG} || true"
                }
            }
        }
    }
}